DROP TABLE IF EXISTS ROOMS CASCADE;
DROP TABLE IF EXISTS STUDENTS CASCADE;
DROP TABLE IF EXISTS CAMPUS_USERS CASCADE;
DROP TABLE IF EXISTS EVENTS CASCADE;
DROP TABLE IF EXISTS CAMPUS_GROUPS CASCADE;
DROP TABLE IF EXISTS STUDENT_GROUPS CASCADE;
DROP TABLE IF EXISTS GROUP_MESSAGE CASCADE;
DROP TABLE IF EXISTS STUDENT_LIKES CASCADE;
DROP TABLE IF EXISTS MESSAGE_LIKES CASCADE;

CREATE TABLE ROOMS
(
	ID BIGINT PRIMARY KEY,
    CAPACITY INT,
    FLOOR INT,
    ROOM_NUMBER VARCHAR(255)
);

CREATE TABLE STUDENTS
(
    ID BIGINT PRIMARY KEY,
	FIRST_NAME VARCHAR(255),
	LAST_NAME VARCHAR(255),
	GENDER INT,
    BIRTH_DATE DATE,
	FACULTY VARCHAR(255),
	SPECIALITY VARCHAR(255),
	COURSE INT,
	GROUP_NUMBER INT,
	IMAGE_PATH VARCHAR(255),
	ROOM_ID BIGINT REFERENCES ROOMS(ID)
);

CREATE TABLE CAMPUS_USERS
(
    ID BIGINT PRIMARY KEY,
	LOGIN VARCHAR(255),
	PASSWORD VARCHAR(255),
	ROLE INT,
	STUDENT_ID BIGINT REFERENCES STUDENTS(ID)
);

CREATE TABLE EVENTS
(
    ID BIGINT PRIMARY KEY,
	TITLE VARCHAR(255),
	BODY VARCHAR(255),
	STUDENT_ID BIGINT REFERENCES STUDENTS(ID)
);

CREATE TABLE CAMPUS_GROUPS
(
    ID BIGINT PRIMARY KEY,
	NAME VARCHAR(255),
	IMAGE_URL VARCHAR(255)
);

CREATE TABLE STUDENT_GROUPS
(
    STUDENT_ID BIGINT REFERENCES STUDENTS(ID),
	GROUP_ID BIGINT REFERENCES CAMPUS_GROUPS(ID)
);

CREATE TABLE GROUP_MESSAGE
(
    ID BIGINT PRIMARY KEY,
	MESSAGE VARCHAR(255),
	POST_TIME TIMESTAMP,
    GROUP_ID BIGINT REFERENCES CAMPUS_GROUPS(ID),
    STUDENT_ID BIGINT REFERENCES STUDENTS(ID)
);

CREATE TABLE STUDENT_LIKES
(
    FROM_ID BIGINT REFERENCES STUDENTS(ID),
	TO_ID BIGINT REFERENCES STUDENTS(ID),
	POST_TIME TIMESTAMP
);

CREATE TABLE MESSAGE_LIKES
(
    FROM_ID BIGINT REFERENCES STUDENTS(ID),
	TO_ID BIGINT REFERENCES GROUP_MESSAGE(ID),
	POST_TIME TIMESTAMP
);